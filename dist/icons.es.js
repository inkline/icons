var e=Object.defineProperty,t=Object.prototype.hasOwnProperty,r=Object.getOwnPropertySymbols,n=Object.prototype.propertyIsEnumerable,a=(t,r,n)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[r]=n,o=(e,o)=>{for(var l in o||(o={}))t.call(o,l)&&a(e,l,o[l]);if(r)for(var l of r(o))n.call(o,l)&&a(e,l,o[l]);return e};import{h as l,defineComponent as i,computed as s,onMounted as c}from"vue";const p=class{static add(e,t){p.icons[e]=t}static addMultiple(e){Object.keys(e).forEach((t=>{p.icons[t]=e[t]}))}};let u=p;u.icons={};const v=e=>e.map((e=>"element"===e.type?l(e.name,e.attributes,v(e.children)):e.value));var d=i({name:"IIcon",props:{name:{type:String,default:""},size:{type:String,default:""}},setup(e){const t=s((()=>e.name.replace(/[-_]([a-z0-9])/g,((e,t)=>t.toUpperCase())))),r=s((()=>u.icons[t.value])),n=s((()=>({"inkline-icon":!0,[`-${e.size}`]:Boolean(e.size)})));return c((()=>{if(t.value&&!u.icons[t.value])throw new Error(`The icon ${t.value} is not registered.`)})),()=>{var e,t;return l("svg",o({class:n.value},null==(e=r.value)?void 0:e.attributes),v((null==(t=r.value)?void 0:t.children)||[]))}}});const m={registerComponent:!0},b={add(e){u.addMultiple(e)},install(e,t={}){(t=o(o({},m),t)).registerComponent&&e.component(d.name,d)}};export default b;export{b as InklineIcons};
